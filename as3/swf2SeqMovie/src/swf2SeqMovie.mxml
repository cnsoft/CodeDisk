<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="441" height="266" creationComplete="onInit()">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.crypto.MD5;
			import com.adobe.serialization.json.JSONEncoder;
			
			import io.Utils;
			
			import model.MovieData;
			
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.core.UIComponent;
			import mx.graphics.codec.PNGEncoder;
			

			
			protected var jobs:Vector.<ParseJob> = new Vector.<ParseJob>;
			protected var jobCount:int;
			protected function onInit():void {
				NativeApplication.nativeApplication.autoExit =true;
				
				select.enabled = true;
				working.enabled = false;
				mcLoading.label = "";
			}
			
			protected function onClickSelect(event:MouseEvent):void
			{
				
				if (jobs.length){
					return;
				}
				
				var allFilter:FileFilter = new FileFilter("* (*.*)", "*.*");
				Utils.openAndReadFiles(onSlectFiles, allFilter);
			}
			
			private function onSlectFiles(data:Array, files:Array):void {	
				for (var i:int=0;i<data.length;i++){
					jobs.push(new ParseJob(data[i], files[i],  this.ignoreBlank.selected, txtCares.text));
				}
				jobCount = jobs.length;
				
				prepareNextJob();
				
			}
			
			
			
			private function nextJob():void
			{
				
				var job:ParseJob = jobs.shift();
				if (!job){
					mcLoading.label  = "完成输出到桌面/png_out";
					select.enabled = true;
					working.enabled = false;
					return;
				}
				
				job.addEventListener(MergeEvent.MERGE, onCompleteJob);
				job.run();
			}
		
			
			
			protected function onTimer(event:TimerEvent):void
			{
				// TODO Auto-generated method stub
				select.enabled = false;
				working.enabled = true;
				
				Timer(event.target).stop();
				Timer(event.target).addEventListener(TimerEvent.TIMER_COMPLETE, onTimer);
				
				nextJob();
			}
			
			private function prepareNextJob():void
			{
				var t:Timer = new Timer(100, 1);
				t.addEventListener(TimerEvent.TIMER_COMPLETE, onTimer);
				t.start();
				mcLoading.label  = jobs.length  + "/" + jobCount + "个swf待处理";
				//mcLoading.setProgress(50, 50);//Number((jobCount - jobs.length)/jobCount)
				
			}
			
			//Run|Idle|Attack1|Attack2|Attacked|Die|Win
			
			protected function onCompleteJob(event:MergeEvent):void
			{
				
				//完成了一个swf的处理
				//开始处理重复的图片
				
				//压缩重复的bitmapdata
				var movieList:Array = event.movieDataList;
				var i:int;
				var diffBitmaps:Object = {};
				var bitmaps:Array = [];
				//w_h_md5 as key
				var count:int = 0;
				var data:MovieData;

				for (i=0;i<movieList.length;i++){
					data = movieList[i];
					count += data.bitmaps.length;
					for (var b:int=0;b<data.bitmaps.length;b++){
						if (noDuplicated.selected){
							var ba:ByteArray = data.bitmaps[b].getPixels(data.bitmaps[b].rect);
							ba.position = 0;
							var checksum:String = "";
							while(ba.bytesAvailable){
								checksum += ba.readUnsignedInt().toString();
							}
							//var checksum:String = ba.readUTFBytes(ba.length);
							//var md5:String = MD5.hashBinary(ba);
							if (diffBitmaps[checksum]){
								
							} else {
								diffBitmaps[checksum] = bitmaps.length;
								bitmaps.push(data.bitmaps[b]);
							}
							data.bitmapIndices.push(diffBitmaps[checksum] );
						} else {
							data.bitmapIndices.push(bitmaps.length );
							bitmaps.push(data.bitmaps[b]);
						}
					}
				}
				
				trace("at last：" + count + "->" +  bitmaps.length );
				//save pngs
				var p:int;
				for (p=0;p<bitmaps.length;p++){
					var pngfile:String = event.name + "/" + p + ".png";

					savePng(bitmaps[p], pngfile);
				}
				
				//write config
				/** var movies = {
				 *    "xxxx" : {
				 *         frames: [0,1,1,2,3,4],
				 *      lables: {"1": "xxxx"}, //这里索引从1开始
				 *      x:[0,0,0,0,0,0],
				 *      y:[0,0,0,0,0,0]
				 *    },
				 * 	'yyy': {....}	
				 * }];
				 */ 
				var moviesConfig:Object = {};
				for (i=0;i<movieList.length;i++){
					data = movieList[i];
					var config:Object = {frames:data.bitmapIndices, lables:data.frameLables,x:[],y:[] };
					for (p=0;p<data.offsets.length;p++){
						config['x'].push(data.offsets[p].x);
						config['y'].push(data.offsets[p].y);
					}
					moviesConfig[data.className] = config;
				}
				
				
				var str:String = new JSONEncoder(moviesConfig).getString();
				str = "var movies=" + str + ";";
				trace(str);
				
				//保存jsfl
				saveJSFL( event.name, str, bitmaps.length );
			
				prepareNextJob();
			}
			
			private function saveJSFL(swfName:String, info:String, count:int):void {
				var file:String = swfName + ".jsfl";
				var myFile:File = File.desktopDirectory.resolvePath("png_output/" + file);
				var myFileStream:FileStream = new FileStream();
				myFileStream.open(myFile, FileMode.WRITE);
				/**
				 * 	var pngCount = 59;
				var movies={"asset.monster.walk.100205":{"x":[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43],"y":[-64,-64,-65,-65,-65,-64,-64,-64,-65,-65,-65,-64,-64],"lables":{},"frames":[37,38,39,40,41,42,43,44,45,46,47,48,49]},"asset.monster.attack.100205":{"x":[-43,-45,-47,-48,-50,-52,-53,-55,-56,-58,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152,-152],"y":[-64,-71,-78,-85,-92,-99,-107,-114,-121,-128,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197,-197],"lables":{"0":"start","9":"start2","19":"start3"},"frames":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]},"asset.monster.hurt.100205":{"x":[-43,-43,-41,-40,-40,-39,-39,-39],"y":[-64,-70,-73,-73,-73,-73,-73,-73],"lables":{},"frames":[11,50,51,52,53,54,55,55]},"asset.monster.dead.100205":{"x":[-43,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128],"y":[-64,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235,-235],"lables":{},"frames":[0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,10]},"asset.monster.idle.100205":{"x":[-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-42,-42,-42,-42,-42,-43,-43,-43,-43,-43],"y":[-64,-64,-64,-64,-64,-65,-65,-65,-65,-65,-67,-67,-67,-67,-67,-65,-65,-65,-65,-65],"lables":{},"frames":[11,11,11,11,11,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58]}};

				 */
				//myFileStream.writeUTFBytes("\\\\created by www.swfdiy.com\n");
				myFileStream.writeUTFBytes("var swfName = '" + swfName + "';\n");
				myFileStream.writeUTFBytes("var pngCount = " + count + ";\n");
				myFileStream.writeUTFBytes(info + "\n");
				
				
				//read tmpl
				var tmpl:File = File.applicationDirectory.resolvePath("tmpl.jsfl");
				var tmplStream:FileStream = new FileStream();
				tmplStream.open(tmpl, FileMode.READ);
				tmplStream.position = 0;
				var tmplContent:String = tmplStream.readUTFBytes(tmplStream.bytesAvailable);
				tmplStream.close();
				
				
				myFileStream.writeUTFBytes(tmplContent);
				myFileStream.close();
			}
			/**
			 * 把bitmapdata保存成png图片 ——>png_out
			 * @param bitmapData
			 * @param file
			 * 
			 */		
			private function savePng(bitmapData:BitmapData, file:String):void {
				var pngEncoder:PNGEncoder = new PNGEncoder();
				
				var imageByteArray:ByteArray = pngEncoder.encode(bitmapData); 
				var myFile:File = File.desktopDirectory.resolvePath("png_output/" + file);
				var myFileStream:FileStream = new FileStream();
				myFileStream.open(myFile, FileMode.WRITE);
				myFileStream.writeBytes(imageByteArray);
				myFileStream.close();
			}
	
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group id="select" width="431" height="104">
		<s:CheckBox id="ignoreBlank" x="15" y="16" label="忽略空帧" selected="true"/>
		<s:TextInput id="txtCares" x="103" y="39" width="317" height="24" text=".*"/>
		<s:Label x="104" y="19" text="正则过滤"/>
		<s:CheckBox x="10" y="45" label="剔除重复" id="noDuplicated" selected="true"/>
	</s:Group>
	
	<s:Group id="working" x="7" y="112" width="211" height="67">
		<mx:ProgressBar id="mcLoading" x="23" y="22" width="120" maximum="0" minimum="0"/>
	</s:Group>
	<s:Button x="235" y="108" width="193" height="66" label="选择1个或者多个swf" click="onClickSelect(event)"/>
	<!--<s:CheckBox id="makeBig" x="115" y="163" label="生成大图片" selected="false"/>
	<s:CheckBox id="makeSingles" x="201" y="163" label="生成单帧图片" selected="true"/>-->
	
	
</s:WindowedApplication>
